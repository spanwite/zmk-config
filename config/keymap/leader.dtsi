#undef ZMK_LEADER_SEQUENCE
#define ZMK_LEADER_SEQUENCE(name, leader_bindings, leader_sequence) \
    / { \
        behaviors { \
            leader: leader { \
                compatible = "zmk,behavior-leader-key"; \
                #binding-cells = <0>; \
                ignore-keys = <LSHFT RSHFT>; \
                leader_sequence_ ## name { \
                    bindings = <leader_bindings>; \
                    sequence = <leader_sequence>; \
                }; \
            }; \
        }; \
    };

// Layer (L)
ZMK_LEADER_SEQUENCE(layer_meh,        &to MEH,             L P)

// System (W)
ZMK_LEADER_SEQUENCE(win_sleep,        &mc_win_sleep,       W W)
ZMK_LEADER_SEQUENCE(win_shutdown,     &mc_win_shutdown,    W S)
ZMK_LEADER_SEQUENCE(win_restart,      &mc_win_restart,     W R)
ZMK_LEADER_SEQUENCE(kbd_reset,        &sys_reset,          W G)
ZMK_LEADER_SEQUENCE(kbd_boot,         &bootloader,         W B)

// Shortcuts (S)
ZMK_LEADER_SEQUENCE(pt_color_pick,    &kp LG(LS(C)),       S C)
ZMK_LEADER_SEQUENCE(pt_cmd_palette,   &kp LG(LS(O)),       S S)
ZMK_LEADER_SEQUENCE(pt_text_extract,  &kp LG(LS(E)),       S E)
ZMK_LEADER_SEQUENCE(pt_pin_top,       &kp LG(LS(T)),       S T)
ZMK_LEADER_SEQUENCE(pt_fancy_zones,   &kp LG(LS(F)),       S F)
ZMK_LEADER_SEQUENCE(pt_ruler,         &kp LG(LS(R)),       S R)
ZMK_LEADER_SEQUENCE(pt_paste,         &kp LG(LS(V)),       S V)
ZMK_LEADER_SEQUENCE(pt_workspaces,    &kp LG(LS(GRAVE)),   S G)
ZMK_LEADER_SEQUENCE(voice_typing,     &kp LG(H),           S D)

